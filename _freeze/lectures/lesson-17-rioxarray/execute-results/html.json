{
  "hash": "5a99269fc111b0549dd23d8574da8f39",
  "result": {
    "markdown": "<!--\nhttps://carpentries-incubator.github.io/geospatial-python/06-raster-intro.html\n-->\n\n# `rioxarray`\n\nIn this lesson we will introduce [`rioxarray`](https://corteva.github.io/rioxarray/stable/), a Python extension for `xarray` to manipulate `xarray.DataArray`s as rasters. \nThe name `rioxarray` stands for *raster input/output + xarray*. \nWe will use the `rioxarray`'s `rio` accessor to obtain raster information from an `xarray.DataArray` and do some raster manipulations (calculate NDVI). \n\n## Data\nThe raster files we will use today come from the [US National Agriculture Imagery Program (NAIP)](https://naip-usdaonline.hub.arcgis.com). \nNAIP images are are high-resolution aerial images with four spectral bands: Red, Green, Blue and Near-infrared (NIR). \nThe raster's we'll use today are from 2020.\n\nFor this lesson, I did some pre-processing of the data to separate the RGB bands from the NIR band and clipped a scene. \nThe data was accessed and pre-processed at [Microsoft's Planetary Computer NAIP data repository](https://planetarycomputer.microsoft.com/dataset/naip#overview).\n\n## Import .tif\n\nLet's start by loading the libraries we'll use: \n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport os\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nimport rioxarray as rioxr\n\nimport geopandas as gpd\nfrom shapely.geometry import Polygon\n```\n:::\n\n\nThere are [multiple ways of opening a '.tif' file using `xarray` or `rioxarray`](https://corteva.github.io/rioxarray/html/getting_started/getting_started.html). \nUsing the `rioxarray.open_rasterio()` function to open the '.tif' file is a simple way to make sure all our geospatial data gets loaded correctly:\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\n# load NIR tif file\nnir_fp = os.path.join(os.getcwd(),'data','naip','nir.tif')\nnir = rioxr.open_rasterio(nir_fp)\nnir\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n<defs>\n<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n</symbol>\n<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n</symbol>\n</defs>\n</svg>\n<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n *\n */\n\n:root {\n  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n  --xr-background-color: var(--jp-layout-color0, white);\n  --xr-background-color-row-even: var(--jp-layout-color1, white);\n  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n}\n\nhtml[theme=dark],\nbody[data-theme=dark],\nbody.vscode-dark {\n  --xr-font-color0: rgba(255, 255, 255, 1);\n  --xr-font-color2: rgba(255, 255, 255, 0.54);\n  --xr-font-color3: rgba(255, 255, 255, 0.38);\n  --xr-border-color: #1F1F1F;\n  --xr-disabled-color: #515151;\n  --xr-background-color: #111111;\n  --xr-background-color-row-even: #111111;\n  --xr-background-color-row-odd: #313131;\n}\n\n.xr-wrap {\n  display: block !important;\n  min-width: 300px;\n  max-width: 700px;\n}\n\n.xr-text-repr-fallback {\n  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n  display: none;\n}\n\n.xr-header {\n  padding-top: 6px;\n  padding-bottom: 6px;\n  margin-bottom: 4px;\n  border-bottom: solid 1px var(--xr-border-color);\n}\n\n.xr-header > div,\n.xr-header > ul {\n  display: inline;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.xr-obj-type,\n.xr-array-name {\n  margin-left: 2px;\n  margin-right: 10px;\n}\n\n.xr-obj-type {\n  color: var(--xr-font-color2);\n}\n\n.xr-sections {\n  padding-left: 0 !important;\n  display: grid;\n  grid-template-columns: 150px auto auto 1fr 20px 20px;\n}\n\n.xr-section-item {\n  display: contents;\n}\n\n.xr-section-item input {\n  display: none;\n}\n\n.xr-section-item input + label {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-item input:enabled + label {\n  cursor: pointer;\n  color: var(--xr-font-color2);\n}\n\n.xr-section-item input:enabled + label:hover {\n  color: var(--xr-font-color0);\n}\n\n.xr-section-summary {\n  grid-column: 1;\n  color: var(--xr-font-color2);\n  font-weight: 500;\n}\n\n.xr-section-summary > span {\n  display: inline-block;\n  padding-left: 0.5em;\n}\n\n.xr-section-summary-in:disabled + label {\n  color: var(--xr-font-color2);\n}\n\n.xr-section-summary-in + label:before {\n  display: inline-block;\n  content: '►';\n  font-size: 11px;\n  width: 15px;\n  text-align: center;\n}\n\n.xr-section-summary-in:disabled + label:before {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-summary-in:checked + label:before {\n  content: '▼';\n}\n\n.xr-section-summary-in:checked + label > span {\n  display: none;\n}\n\n.xr-section-summary,\n.xr-section-inline-details {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n.xr-section-inline-details {\n  grid-column: 2 / -1;\n}\n\n.xr-section-details {\n  display: none;\n  grid-column: 1 / -1;\n  margin-bottom: 5px;\n}\n\n.xr-section-summary-in:checked ~ .xr-section-details {\n  display: contents;\n}\n\n.xr-array-wrap {\n  grid-column: 1 / -1;\n  display: grid;\n  grid-template-columns: 20px auto;\n}\n\n.xr-array-wrap > label {\n  grid-column: 1;\n  vertical-align: top;\n}\n\n.xr-preview {\n  color: var(--xr-font-color3);\n}\n\n.xr-array-preview,\n.xr-array-data {\n  padding: 0 5px !important;\n  grid-column: 2;\n}\n\n.xr-array-data,\n.xr-array-in:checked ~ .xr-array-preview {\n  display: none;\n}\n\n.xr-array-in:checked ~ .xr-array-data,\n.xr-array-preview {\n  display: inline-block;\n}\n\n.xr-dim-list {\n  display: inline-block !important;\n  list-style: none;\n  padding: 0 !important;\n  margin: 0;\n}\n\n.xr-dim-list li {\n  display: inline-block;\n  padding: 0;\n  margin: 0;\n}\n\n.xr-dim-list:before {\n  content: '(';\n}\n\n.xr-dim-list:after {\n  content: ')';\n}\n\n.xr-dim-list li:not(:last-child):after {\n  content: ',';\n  padding-right: 5px;\n}\n\n.xr-has-index {\n  font-weight: bold;\n}\n\n.xr-var-list,\n.xr-var-item {\n  display: contents;\n}\n\n.xr-var-item > div,\n.xr-var-item label,\n.xr-var-item > .xr-var-name span {\n  background-color: var(--xr-background-color-row-even);\n  margin-bottom: 0;\n}\n\n.xr-var-item > .xr-var-name:hover span {\n  padding-right: 5px;\n}\n\n.xr-var-list > li:nth-child(odd) > div,\n.xr-var-list > li:nth-child(odd) > label,\n.xr-var-list > li:nth-child(odd) > .xr-var-name span {\n  background-color: var(--xr-background-color-row-odd);\n}\n\n.xr-var-name {\n  grid-column: 1;\n}\n\n.xr-var-dims {\n  grid-column: 2;\n}\n\n.xr-var-dtype {\n  grid-column: 3;\n  text-align: right;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-preview {\n  grid-column: 4;\n}\n\n.xr-index-preview {\n  grid-column: 2 / 5;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-name,\n.xr-var-dims,\n.xr-var-dtype,\n.xr-preview,\n.xr-attrs dt {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding-right: 10px;\n}\n\n.xr-var-name:hover,\n.xr-var-dims:hover,\n.xr-var-dtype:hover,\n.xr-attrs dt:hover {\n  overflow: visible;\n  width: auto;\n  z-index: 1;\n}\n\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  display: none;\n  background-color: var(--xr-background-color) !important;\n  padding-bottom: 5px !important;\n}\n\n.xr-var-attrs-in:checked ~ .xr-var-attrs,\n.xr-var-data-in:checked ~ .xr-var-data,\n.xr-index-data-in:checked ~ .xr-index-data {\n  display: block;\n}\n\n.xr-var-data > table {\n  float: right;\n}\n\n.xr-var-name span,\n.xr-var-data,\n.xr-index-name div,\n.xr-index-data,\n.xr-attrs {\n  padding-left: 25px !important;\n}\n\n.xr-attrs,\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  grid-column: 1 / -1;\n}\n\ndl.xr-attrs {\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-columns: 125px auto;\n}\n\n.xr-attrs dt,\n.xr-attrs dd {\n  padding: 0;\n  margin: 0;\n  float: left;\n  padding-right: 10px;\n  width: auto;\n}\n\n.xr-attrs dt {\n  font-weight: normal;\n  grid-column: 1;\n}\n\n.xr-attrs dt:hover span {\n  display: inline-block;\n  background: var(--xr-background-color);\n  padding-right: 10px;\n}\n\n.xr-attrs dd {\n  grid-column: 2;\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n\n.xr-icon-database,\n.xr-icon-file-text2,\n.xr-no-icon {\n  display: inline-block;\n  vertical-align: middle;\n  width: 1em;\n  height: 1.5em !important;\n  stroke-width: 0;\n  stroke: currentColor;\n  fill: currentColor;\n}\n</style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray (band: 1, y: 3208, x: 2419)&gt;\n[7760152 values with dtype=uint8]\nCoordinates:\n  * band         (band) int64 1\n  * x            (x) float64 2.512e+05 2.512e+05 ... 2.527e+05 2.527e+05\n  * y            (y) float64 3.813e+06 3.813e+06 ... 3.811e+06 3.811e+06\n    spatial_ref  int64 0\nAttributes:\n    AREA_OR_POINT:  Area\n    scale_factor:   1.0\n    add_offset:     0.0</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'></div><ul class='xr-dim-list'><li><span class='xr-has-index'>band</span>: 1</li><li><span class='xr-has-index'>y</span>: 3208</li><li><span class='xr-has-index'>x</span>: 2419</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-09bab38d-e8b0-439d-9839-e86237304ee5' class='xr-array-in' type='checkbox' checked><label for='section-09bab38d-e8b0-439d-9839-e86237304ee5' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>...</span></div><div class='xr-array-data'><pre>[7760152 values with dtype=uint8]</pre></div></div></li><li class='xr-section-item'><input id='section-429337aa-1c58-46ba-9c81-203eefaaa928' class='xr-section-summary-in' type='checkbox'  checked><label for='section-429337aa-1c58-46ba-9c81-203eefaaa928' class='xr-section-summary' >Coordinates: <span>(4)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>band</span></div><div class='xr-var-dims'>(band)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>1</div><input id='attrs-7134da6d-2671-4ec0-b5c0-9af1b5717059' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-7134da6d-2671-4ec0-b5c0-9af1b5717059' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-878e988d-5fe3-429d-9bb5-3a6ab1170ff6' class='xr-var-data-in' type='checkbox'><label for='data-878e988d-5fe3-429d-9bb5-3a6ab1170ff6' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([1])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>2.512e+05 2.512e+05 ... 2.527e+05</div><input id='attrs-984a2e32-789f-4476-b8d2-e129c920b766' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-984a2e32-789f-4476-b8d2-e129c920b766' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-0256d169-3221-4b22-bd63-3d029d7abb97' class='xr-var-data-in' type='checkbox'><label for='data-0256d169-3221-4b22-bd63-3d029d7abb97' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([251219.1, 251219.7, 251220.3, ..., 252668.7, 252669.3, 252669.9])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>y</span></div><div class='xr-var-dims'>(y)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>3.813e+06 3.813e+06 ... 3.811e+06</div><input id='attrs-fe3f436a-8983-4fb0-b04b-911e2bfb1401' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-fe3f436a-8983-4fb0-b04b-911e2bfb1401' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-65a586fc-b02c-4d31-b83e-b1803c206f79' class='xr-var-data-in' type='checkbox'><label for='data-65a586fc-b02c-4d31-b83e-b1803c206f79' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([3812951.7, 3812951.1, 3812950.5, ..., 3811028.7, 3811028.1, 3811027.5])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>spatial_ref</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>0</div><input id='attrs-26811016-a933-47e7-aeb4-2ed658eb2d26' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-26811016-a933-47e7-aeb4-2ed658eb2d26' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-6adfa549-c84d-49b8-a627-d4db1076dc96' class='xr-var-data-in' type='checkbox'><label for='data-6adfa549-c84d-49b8-a627-d4db1076dc96' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>crs_wkt :</span></dt><dd>PROJCS[&quot;NAD83 / UTM zone 11N&quot;,GEOGCS[&quot;NAD83&quot;,DATUM[&quot;North_American_Datum_1983&quot;,SPHEROID[&quot;GRS 1980&quot;,6378137,298.257222101,AUTHORITY[&quot;EPSG&quot;,&quot;7019&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;6269&quot;]],PRIMEM[&quot;Greenwich&quot;,0,AUTHORITY[&quot;EPSG&quot;,&quot;8901&quot;]],UNIT[&quot;degree&quot;,0.0174532925199433,AUTHORITY[&quot;EPSG&quot;,&quot;9122&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;4269&quot;]],PROJECTION[&quot;Transverse_Mercator&quot;],PARAMETER[&quot;latitude_of_origin&quot;,0],PARAMETER[&quot;central_meridian&quot;,-117],PARAMETER[&quot;scale_factor&quot;,0.9996],PARAMETER[&quot;false_easting&quot;,500000],PARAMETER[&quot;false_northing&quot;,0],UNIT[&quot;metre&quot;,1,AUTHORITY[&quot;EPSG&quot;,&quot;9001&quot;]],AXIS[&quot;Easting&quot;,EAST],AXIS[&quot;Northing&quot;,NORTH],AUTHORITY[&quot;EPSG&quot;,&quot;26911&quot;]]</dd><dt><span>semi_major_axis :</span></dt><dd>6378137.0</dd><dt><span>semi_minor_axis :</span></dt><dd>6356752.314140356</dd><dt><span>inverse_flattening :</span></dt><dd>298.257222101</dd><dt><span>reference_ellipsoid_name :</span></dt><dd>GRS 1980</dd><dt><span>longitude_of_prime_meridian :</span></dt><dd>0.0</dd><dt><span>prime_meridian_name :</span></dt><dd>Greenwich</dd><dt><span>geographic_crs_name :</span></dt><dd>NAD83</dd><dt><span>horizontal_datum_name :</span></dt><dd>North American Datum 1983</dd><dt><span>projected_crs_name :</span></dt><dd>NAD83 / UTM zone 11N</dd><dt><span>grid_mapping_name :</span></dt><dd>transverse_mercator</dd><dt><span>latitude_of_projection_origin :</span></dt><dd>0.0</dd><dt><span>longitude_of_central_meridian :</span></dt><dd>-117.0</dd><dt><span>false_easting :</span></dt><dd>500000.0</dd><dt><span>false_northing :</span></dt><dd>0.0</dd><dt><span>scale_factor_at_central_meridian :</span></dt><dd>0.9996</dd><dt><span>spatial_ref :</span></dt><dd>PROJCS[&quot;NAD83 / UTM zone 11N&quot;,GEOGCS[&quot;NAD83&quot;,DATUM[&quot;North_American_Datum_1983&quot;,SPHEROID[&quot;GRS 1980&quot;,6378137,298.257222101,AUTHORITY[&quot;EPSG&quot;,&quot;7019&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;6269&quot;]],PRIMEM[&quot;Greenwich&quot;,0,AUTHORITY[&quot;EPSG&quot;,&quot;8901&quot;]],UNIT[&quot;degree&quot;,0.0174532925199433,AUTHORITY[&quot;EPSG&quot;,&quot;9122&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;4269&quot;]],PROJECTION[&quot;Transverse_Mercator&quot;],PARAMETER[&quot;latitude_of_origin&quot;,0],PARAMETER[&quot;central_meridian&quot;,-117],PARAMETER[&quot;scale_factor&quot;,0.9996],PARAMETER[&quot;false_easting&quot;,500000],PARAMETER[&quot;false_northing&quot;,0],UNIT[&quot;metre&quot;,1,AUTHORITY[&quot;EPSG&quot;,&quot;9001&quot;]],AXIS[&quot;Easting&quot;,EAST],AXIS[&quot;Northing&quot;,NORTH],AUTHORITY[&quot;EPSG&quot;,&quot;26911&quot;]]</dd><dt><span>GeoTransform :</span></dt><dd>251218.8 0.6000000000000072 0.0 3812952.0 0.0 -0.600000000000058</dd></dl></div><div class='xr-var-data'><pre>array(0)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-02f039ec-4004-4db2-a55e-f8cebd6fdf95' class='xr-section-summary-in' type='checkbox'  ><label for='section-02f039ec-4004-4db2-a55e-f8cebd6fdf95' class='xr-section-summary' >Indexes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>band</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-fd1a27c8-9b07-45e6-8ae3-6bb39cadcc7d' class='xr-index-data-in' type='checkbox'/><label for='index-fd1a27c8-9b07-45e6-8ae3-6bb39cadcc7d' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([1], dtype=&#x27;int64&#x27;, name=&#x27;band&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>x</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-3c1c9472-ba74-4ba7-922e-d964bc80ec0a' class='xr-index-data-in' type='checkbox'/><label for='index-3c1c9472-ba74-4ba7-922e-d964bc80ec0a' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([251219.09999999998, 251219.69999999998,           251220.3,\n       251220.89999999997, 251221.49999999997, 251222.09999999998,\n       251222.69999999998,           251223.3, 251223.89999999997,\n       251224.49999999997,\n       ...\n                 252664.5,           252665.1, 252665.69999999998,\n                 252666.3,           252666.9,           252667.5,\n                 252668.1, 252668.69999999998,           252669.3,\n                 252669.9],\n      dtype=&#x27;float64&#x27;, name=&#x27;x&#x27;, length=2419))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>y</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-7f7ddde2-aefb-44c9-aa9c-9e24ea19a32c' class='xr-index-data-in' type='checkbox'/><label for='index-7f7ddde2-aefb-44c9-aa9c-9e24ea19a32c' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([         3812951.7,          3812951.1,          3812950.5,\n       3812949.9000000004, 3812949.3000000003,          3812948.7,\n                3812948.1,          3812947.5, 3812946.9000000004,\n       3812946.3000000003,\n       ...\n                3811032.9,          3811032.3,          3811031.7,\n                3811031.1,          3811030.5,          3811029.9,\n                3811029.3,          3811028.7,          3811028.1,\n                3811027.5],\n      dtype=&#x27;float64&#x27;, name=&#x27;y&#x27;, length=3208))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-df96e175-95b1-449b-a0e1-c206fd061d43' class='xr-section-summary-in' type='checkbox'  checked><label for='section-df96e175-95b1-449b-a0e1-c206fd061d43' class='xr-section-summary' >Attributes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>AREA_OR_POINT :</span></dt><dd>Area</dd><dt><span>scale_factor :</span></dt><dd>1.0</dd><dt><span>add_offset :</span></dt><dd>0.0</dd></dl></div></li></ul></div></div>\n```\n:::\n:::\n\n\n## `xr.DataArray` exploration\n\nFirst, let's verify the raster we loaded is an `xarray.DataArray`:\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\ntype(nir)\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\nxarray.core.dataarray.DataArray\n```\n:::\n:::\n\n\nNotice we see all the components of an `xarray.DataArray`: its dimensions (band, y, x), the coordiantes for each dimension, and some attributes. \nWe can also directly access some of these attribues:\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\n# print shape and data type\nprint('shape: ', nir.shape)\nprint('data type: ', nir.dtype, '\\n')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nshape:  (1, 3208, 2419)\ndata type:  uint8 \n\n```\n:::\n:::\n\n\nUsing the `.values` attribute we can get a quick view at the values at the corners in our data array. \n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\nprint(type(nir.values))\nnir.values\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'numpy.ndarray'>\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\narray([[[167, 164, 161, ..., 147, 152, 151],\n        [170, 170, 168, ..., 151, 149, 154],\n        [176, 177, 177, ..., 151, 151, 151],\n        ...,\n        [ 94,  88, 101, ...,  83,  88,  79],\n        [108,  95, 103, ...,  92,  91,  75],\n        [ 94,  90, 104, ...,  87,  88,  82]]], dtype=uint8)\n```\n:::\n:::\n\n\nWe can also plot our data:\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\nnir.plot()\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```\n<matplotlib.collections.QuadMesh at 0x10a80ce90>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](lesson-17-rioxarray_files/figure-html/cell-7-output-2.png){width=598 height=449}\n:::\n:::\n\n\nNotice the coordinates on the x and y axes. \nThis map shows the light captured in the near-infrared spectrum by a sensor on a plane. \n**Can you guess where this?** \nIf you guessed Santa Barbara downtown, you guessed right! \n\n## `rio` accessor\n\nAn **accessor** in Python let's us access a different set of properties of an object.\nIn our case, we use the `.rio` accessor for `xarray.DataArray`s to access its raster properties. \nFor example, its number of bands, height, width, spatial bounding box, and CRS:\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\n# check geospatial attributes\nprint('# bands: ', nir.rio.count)\nprint('height: ', nir.rio.height)\nprint('width: ', nir.rio.width, '\\n')\n\nprint('spatial bounding box: ')\nprint(nir.rio.bounds(), '\\n')\n\nprint('CRS: ', nir.rio.crs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# bands:  1\nheight:  3208\nwidth:  2419 \n\nspatial bounding box: \n(251218.8, 3811027.2, 252670.19999999998, 3812952.0) \n\nCRS:  EPSG:26911\n```\n:::\n:::\n\n\n:::{.callout-note}\n# Other accessors\nWe have used accessors before, for example the `.str` and `.dt` accessors in `pandas`.\n:::\n\n## Multi-band raster\n\nLet's now import the RGB raster:\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\n# open RGB raster\nrgb_fp = os.path.join(os.getcwd(),'data','naip','rgb.tif')\nrgb = rioxr.open_rasterio(rgb_fp)\nrgb\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```{=html}\n<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n<defs>\n<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n</symbol>\n<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n</symbol>\n</defs>\n</svg>\n<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n *\n */\n\n:root {\n  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n  --xr-background-color: var(--jp-layout-color0, white);\n  --xr-background-color-row-even: var(--jp-layout-color1, white);\n  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n}\n\nhtml[theme=dark],\nbody[data-theme=dark],\nbody.vscode-dark {\n  --xr-font-color0: rgba(255, 255, 255, 1);\n  --xr-font-color2: rgba(255, 255, 255, 0.54);\n  --xr-font-color3: rgba(255, 255, 255, 0.38);\n  --xr-border-color: #1F1F1F;\n  --xr-disabled-color: #515151;\n  --xr-background-color: #111111;\n  --xr-background-color-row-even: #111111;\n  --xr-background-color-row-odd: #313131;\n}\n\n.xr-wrap {\n  display: block !important;\n  min-width: 300px;\n  max-width: 700px;\n}\n\n.xr-text-repr-fallback {\n  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n  display: none;\n}\n\n.xr-header {\n  padding-top: 6px;\n  padding-bottom: 6px;\n  margin-bottom: 4px;\n  border-bottom: solid 1px var(--xr-border-color);\n}\n\n.xr-header > div,\n.xr-header > ul {\n  display: inline;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.xr-obj-type,\n.xr-array-name {\n  margin-left: 2px;\n  margin-right: 10px;\n}\n\n.xr-obj-type {\n  color: var(--xr-font-color2);\n}\n\n.xr-sections {\n  padding-left: 0 !important;\n  display: grid;\n  grid-template-columns: 150px auto auto 1fr 20px 20px;\n}\n\n.xr-section-item {\n  display: contents;\n}\n\n.xr-section-item input {\n  display: none;\n}\n\n.xr-section-item input + label {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-item input:enabled + label {\n  cursor: pointer;\n  color: var(--xr-font-color2);\n}\n\n.xr-section-item input:enabled + label:hover {\n  color: var(--xr-font-color0);\n}\n\n.xr-section-summary {\n  grid-column: 1;\n  color: var(--xr-font-color2);\n  font-weight: 500;\n}\n\n.xr-section-summary > span {\n  display: inline-block;\n  padding-left: 0.5em;\n}\n\n.xr-section-summary-in:disabled + label {\n  color: var(--xr-font-color2);\n}\n\n.xr-section-summary-in + label:before {\n  display: inline-block;\n  content: '►';\n  font-size: 11px;\n  width: 15px;\n  text-align: center;\n}\n\n.xr-section-summary-in:disabled + label:before {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-summary-in:checked + label:before {\n  content: '▼';\n}\n\n.xr-section-summary-in:checked + label > span {\n  display: none;\n}\n\n.xr-section-summary,\n.xr-section-inline-details {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n.xr-section-inline-details {\n  grid-column: 2 / -1;\n}\n\n.xr-section-details {\n  display: none;\n  grid-column: 1 / -1;\n  margin-bottom: 5px;\n}\n\n.xr-section-summary-in:checked ~ .xr-section-details {\n  display: contents;\n}\n\n.xr-array-wrap {\n  grid-column: 1 / -1;\n  display: grid;\n  grid-template-columns: 20px auto;\n}\n\n.xr-array-wrap > label {\n  grid-column: 1;\n  vertical-align: top;\n}\n\n.xr-preview {\n  color: var(--xr-font-color3);\n}\n\n.xr-array-preview,\n.xr-array-data {\n  padding: 0 5px !important;\n  grid-column: 2;\n}\n\n.xr-array-data,\n.xr-array-in:checked ~ .xr-array-preview {\n  display: none;\n}\n\n.xr-array-in:checked ~ .xr-array-data,\n.xr-array-preview {\n  display: inline-block;\n}\n\n.xr-dim-list {\n  display: inline-block !important;\n  list-style: none;\n  padding: 0 !important;\n  margin: 0;\n}\n\n.xr-dim-list li {\n  display: inline-block;\n  padding: 0;\n  margin: 0;\n}\n\n.xr-dim-list:before {\n  content: '(';\n}\n\n.xr-dim-list:after {\n  content: ')';\n}\n\n.xr-dim-list li:not(:last-child):after {\n  content: ',';\n  padding-right: 5px;\n}\n\n.xr-has-index {\n  font-weight: bold;\n}\n\n.xr-var-list,\n.xr-var-item {\n  display: contents;\n}\n\n.xr-var-item > div,\n.xr-var-item label,\n.xr-var-item > .xr-var-name span {\n  background-color: var(--xr-background-color-row-even);\n  margin-bottom: 0;\n}\n\n.xr-var-item > .xr-var-name:hover span {\n  padding-right: 5px;\n}\n\n.xr-var-list > li:nth-child(odd) > div,\n.xr-var-list > li:nth-child(odd) > label,\n.xr-var-list > li:nth-child(odd) > .xr-var-name span {\n  background-color: var(--xr-background-color-row-odd);\n}\n\n.xr-var-name {\n  grid-column: 1;\n}\n\n.xr-var-dims {\n  grid-column: 2;\n}\n\n.xr-var-dtype {\n  grid-column: 3;\n  text-align: right;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-preview {\n  grid-column: 4;\n}\n\n.xr-index-preview {\n  grid-column: 2 / 5;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-name,\n.xr-var-dims,\n.xr-var-dtype,\n.xr-preview,\n.xr-attrs dt {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding-right: 10px;\n}\n\n.xr-var-name:hover,\n.xr-var-dims:hover,\n.xr-var-dtype:hover,\n.xr-attrs dt:hover {\n  overflow: visible;\n  width: auto;\n  z-index: 1;\n}\n\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  display: none;\n  background-color: var(--xr-background-color) !important;\n  padding-bottom: 5px !important;\n}\n\n.xr-var-attrs-in:checked ~ .xr-var-attrs,\n.xr-var-data-in:checked ~ .xr-var-data,\n.xr-index-data-in:checked ~ .xr-index-data {\n  display: block;\n}\n\n.xr-var-data > table {\n  float: right;\n}\n\n.xr-var-name span,\n.xr-var-data,\n.xr-index-name div,\n.xr-index-data,\n.xr-attrs {\n  padding-left: 25px !important;\n}\n\n.xr-attrs,\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  grid-column: 1 / -1;\n}\n\ndl.xr-attrs {\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-columns: 125px auto;\n}\n\n.xr-attrs dt,\n.xr-attrs dd {\n  padding: 0;\n  margin: 0;\n  float: left;\n  padding-right: 10px;\n  width: auto;\n}\n\n.xr-attrs dt {\n  font-weight: normal;\n  grid-column: 1;\n}\n\n.xr-attrs dt:hover span {\n  display: inline-block;\n  background: var(--xr-background-color);\n  padding-right: 10px;\n}\n\n.xr-attrs dd {\n  grid-column: 2;\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n\n.xr-icon-database,\n.xr-icon-file-text2,\n.xr-no-icon {\n  display: inline-block;\n  vertical-align: middle;\n  width: 1em;\n  height: 1.5em !important;\n  stroke-width: 0;\n  stroke: currentColor;\n  fill: currentColor;\n}\n</style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray (band: 3, y: 3208, x: 2419)&gt;\n[23280456 values with dtype=uint8]\nCoordinates:\n  * band         (band) int64 1 2 3\n  * x            (x) float64 2.512e+05 2.512e+05 ... 2.527e+05 2.527e+05\n  * y            (y) float64 3.813e+06 3.813e+06 ... 3.811e+06 3.811e+06\n    spatial_ref  int64 0\nAttributes:\n    AREA_OR_POINT:  Area\n    scale_factor:   1.0\n    add_offset:     0.0</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'></div><ul class='xr-dim-list'><li><span class='xr-has-index'>band</span>: 3</li><li><span class='xr-has-index'>y</span>: 3208</li><li><span class='xr-has-index'>x</span>: 2419</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-33e452e8-df0f-4f07-b118-65ddaaf7ab12' class='xr-array-in' type='checkbox' checked><label for='section-33e452e8-df0f-4f07-b118-65ddaaf7ab12' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>...</span></div><div class='xr-array-data'><pre>[23280456 values with dtype=uint8]</pre></div></div></li><li class='xr-section-item'><input id='section-dd760f75-08b0-4eb9-bef7-1ed1371740e1' class='xr-section-summary-in' type='checkbox'  checked><label for='section-dd760f75-08b0-4eb9-bef7-1ed1371740e1' class='xr-section-summary' >Coordinates: <span>(4)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>band</span></div><div class='xr-var-dims'>(band)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>1 2 3</div><input id='attrs-9df70988-74b7-4202-ba02-1dd3b87a9917' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-9df70988-74b7-4202-ba02-1dd3b87a9917' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-5aa36afe-273c-4236-b018-cbe9abb0014a' class='xr-var-data-in' type='checkbox'><label for='data-5aa36afe-273c-4236-b018-cbe9abb0014a' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([1, 2, 3])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>2.512e+05 2.512e+05 ... 2.527e+05</div><input id='attrs-2efdbd49-699b-4238-acbb-01e37f961292' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-2efdbd49-699b-4238-acbb-01e37f961292' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-5bf235e5-fa4f-4fd9-963b-a31d2d39e238' class='xr-var-data-in' type='checkbox'><label for='data-5bf235e5-fa4f-4fd9-963b-a31d2d39e238' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([251219.1, 251219.7, 251220.3, ..., 252668.7, 252669.3, 252669.9])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>y</span></div><div class='xr-var-dims'>(y)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>3.813e+06 3.813e+06 ... 3.811e+06</div><input id='attrs-56e5c380-5d6f-451e-8726-899848b70428' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-56e5c380-5d6f-451e-8726-899848b70428' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b3621523-e7a9-478d-8d25-1429caab2deb' class='xr-var-data-in' type='checkbox'><label for='data-b3621523-e7a9-478d-8d25-1429caab2deb' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([3812951.7, 3812951.1, 3812950.5, ..., 3811028.7, 3811028.1, 3811027.5])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>spatial_ref</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>0</div><input id='attrs-6cdb4ec5-a56d-4d11-a7c6-639d8887e7c8' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-6cdb4ec5-a56d-4d11-a7c6-639d8887e7c8' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-3840b1bb-6cf0-429b-a89a-3b8e24480110' class='xr-var-data-in' type='checkbox'><label for='data-3840b1bb-6cf0-429b-a89a-3b8e24480110' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>crs_wkt :</span></dt><dd>PROJCS[&quot;NAD83 / UTM zone 11N&quot;,GEOGCS[&quot;NAD83&quot;,DATUM[&quot;North_American_Datum_1983&quot;,SPHEROID[&quot;GRS 1980&quot;,6378137,298.257222101,AUTHORITY[&quot;EPSG&quot;,&quot;7019&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;6269&quot;]],PRIMEM[&quot;Greenwich&quot;,0,AUTHORITY[&quot;EPSG&quot;,&quot;8901&quot;]],UNIT[&quot;degree&quot;,0.0174532925199433,AUTHORITY[&quot;EPSG&quot;,&quot;9122&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;4269&quot;]],PROJECTION[&quot;Transverse_Mercator&quot;],PARAMETER[&quot;latitude_of_origin&quot;,0],PARAMETER[&quot;central_meridian&quot;,-117],PARAMETER[&quot;scale_factor&quot;,0.9996],PARAMETER[&quot;false_easting&quot;,500000],PARAMETER[&quot;false_northing&quot;,0],UNIT[&quot;metre&quot;,1,AUTHORITY[&quot;EPSG&quot;,&quot;9001&quot;]],AXIS[&quot;Easting&quot;,EAST],AXIS[&quot;Northing&quot;,NORTH],AUTHORITY[&quot;EPSG&quot;,&quot;26911&quot;]]</dd><dt><span>semi_major_axis :</span></dt><dd>6378137.0</dd><dt><span>semi_minor_axis :</span></dt><dd>6356752.314140356</dd><dt><span>inverse_flattening :</span></dt><dd>298.257222101</dd><dt><span>reference_ellipsoid_name :</span></dt><dd>GRS 1980</dd><dt><span>longitude_of_prime_meridian :</span></dt><dd>0.0</dd><dt><span>prime_meridian_name :</span></dt><dd>Greenwich</dd><dt><span>geographic_crs_name :</span></dt><dd>NAD83</dd><dt><span>horizontal_datum_name :</span></dt><dd>North American Datum 1983</dd><dt><span>projected_crs_name :</span></dt><dd>NAD83 / UTM zone 11N</dd><dt><span>grid_mapping_name :</span></dt><dd>transverse_mercator</dd><dt><span>latitude_of_projection_origin :</span></dt><dd>0.0</dd><dt><span>longitude_of_central_meridian :</span></dt><dd>-117.0</dd><dt><span>false_easting :</span></dt><dd>500000.0</dd><dt><span>false_northing :</span></dt><dd>0.0</dd><dt><span>scale_factor_at_central_meridian :</span></dt><dd>0.9996</dd><dt><span>spatial_ref :</span></dt><dd>PROJCS[&quot;NAD83 / UTM zone 11N&quot;,GEOGCS[&quot;NAD83&quot;,DATUM[&quot;North_American_Datum_1983&quot;,SPHEROID[&quot;GRS 1980&quot;,6378137,298.257222101,AUTHORITY[&quot;EPSG&quot;,&quot;7019&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;6269&quot;]],PRIMEM[&quot;Greenwich&quot;,0,AUTHORITY[&quot;EPSG&quot;,&quot;8901&quot;]],UNIT[&quot;degree&quot;,0.0174532925199433,AUTHORITY[&quot;EPSG&quot;,&quot;9122&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;4269&quot;]],PROJECTION[&quot;Transverse_Mercator&quot;],PARAMETER[&quot;latitude_of_origin&quot;,0],PARAMETER[&quot;central_meridian&quot;,-117],PARAMETER[&quot;scale_factor&quot;,0.9996],PARAMETER[&quot;false_easting&quot;,500000],PARAMETER[&quot;false_northing&quot;,0],UNIT[&quot;metre&quot;,1,AUTHORITY[&quot;EPSG&quot;,&quot;9001&quot;]],AXIS[&quot;Easting&quot;,EAST],AXIS[&quot;Northing&quot;,NORTH],AUTHORITY[&quot;EPSG&quot;,&quot;26911&quot;]]</dd><dt><span>GeoTransform :</span></dt><dd>251218.8 0.6000000000000072 0.0 3812952.0 0.0 -0.600000000000058</dd></dl></div><div class='xr-var-data'><pre>array(0)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-d5ba29c3-cadb-4f79-9b47-fcae3007de52' class='xr-section-summary-in' type='checkbox'  ><label for='section-d5ba29c3-cadb-4f79-9b47-fcae3007de52' class='xr-section-summary' >Indexes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>band</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-33954a6e-173c-49a0-b807-6d4d3cc2c702' class='xr-index-data-in' type='checkbox'/><label for='index-33954a6e-173c-49a0-b807-6d4d3cc2c702' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([1, 2, 3], dtype=&#x27;int64&#x27;, name=&#x27;band&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>x</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-a18046fb-0ef0-4c52-91ed-a2d88386910d' class='xr-index-data-in' type='checkbox'/><label for='index-a18046fb-0ef0-4c52-91ed-a2d88386910d' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([251219.09999999998, 251219.69999999998,           251220.3,\n       251220.89999999997, 251221.49999999997, 251222.09999999998,\n       251222.69999999998,           251223.3, 251223.89999999997,\n       251224.49999999997,\n       ...\n                 252664.5,           252665.1, 252665.69999999998,\n                 252666.3,           252666.9,           252667.5,\n                 252668.1, 252668.69999999998,           252669.3,\n                 252669.9],\n      dtype=&#x27;float64&#x27;, name=&#x27;x&#x27;, length=2419))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>y</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-dd0ad50d-8ffa-4666-8eb7-0dd0319625fe' class='xr-index-data-in' type='checkbox'/><label for='index-dd0ad50d-8ffa-4666-8eb7-0dd0319625fe' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([         3812951.7,          3812951.1,          3812950.5,\n       3812949.9000000004, 3812949.3000000003,          3812948.7,\n                3812948.1,          3812947.5, 3812946.9000000004,\n       3812946.3000000003,\n       ...\n                3811032.9,          3811032.3,          3811031.7,\n                3811031.1,          3811030.5,          3811029.9,\n                3811029.3,          3811028.7,          3811028.1,\n                3811027.5],\n      dtype=&#x27;float64&#x27;, name=&#x27;y&#x27;, length=3208))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-61306d32-dec1-4576-8fb2-688b3c4c6c0e' class='xr-section-summary-in' type='checkbox'  checked><label for='section-61306d32-dec1-4576-8fb2-688b3c4c6c0e' class='xr-section-summary' >Attributes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>AREA_OR_POINT :</span></dt><dd>Area</dd><dt><span>scale_factor :</span></dt><dd>1.0</dd><dt><span>add_offset :</span></dt><dd>0.0</dd></dl></div></li></ul></div></div>\n```\n:::\n:::\n\n\nNotice this raster has three bands, instead of one. \nThis makes sense because we know these bands correspond tothe Red, Green and Blue bands of the image. \nWe can also check this information by looking directly at the attributes:\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\nprint('rgb shape: ', rgb.shape)\nprint('rgb # bands: ', rgb.rio.count)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nrgb shape:  (3, 3208, 2419)\nrgb # bands:  3\n```\n:::\n:::\n\n\nLet's check the geospatial data too:\n\n::: {.cell execution_count=10}\n``` {.python .cell-code}\n# check geospatial attributes\nprint('shape: ', rgb.shape)\nprint('data type: ', rgb.dtype)\nprint('# bands: ', rgb.rio.count)\nprint('CRS: ', rgb.rio.crs)\n\n# check if the CRSs of the rasters match\nprint( rgb.rio.crs == nir.rio.crs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nshape:  (3, 3208, 2419)\ndata type:  uint8\n# bands:  3\nCRS:  EPSG:26911\nTrue\n```\n:::\n:::\n\n\nOn the last line we checked the nir and rgb rasters have the same ESPG:26911 CRS. \nThis is a projected CRS.\n\n<!--\n![Source: [spatialreference.org](https://spatialreference.org/ref/epsg/26911/)]()\n-->\n\nFinally, let's plot this raster.\nSince it has three bands, we can plot it as an image using the `.plot.imshow()` method, which will interpret the three bands of the object as RGB.\n\n::: {.cell execution_count=11}\n``` {.python .cell-code}\n# parameters for plotting rasters\nsize = 6 # height in in of plot height\naspect = rgb.rio.width / rgb.rio.height # ratio of widht/height\n\n# plot three bands as RGB image\nrgb.plot.imshow(size=size, aspect=aspect)\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n```\n<matplotlib.image.AxesImage at 0x145989f10>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](lesson-17-rioxarray_files/figure-html/cell-12-output-2.png){width=448 height=523}\n:::\n:::\n\n\n## Box for clipping\n\nOur area of interest (aoi) for this lesson is a smaller region that includes only a few blocks around the NCEAS building. \nAn easy way to obtain coordinates for such a region:\n\n![Screenshot from geojson.io](/images/geojsonio-sb.png)\n\n1. go to  [https://geojson.io/](https://geojson.io/) website,\n2. zoom in until you find the NCEAS building in Santa Barbara, it might help to change to 'Satellite Streets' view on the bottom left corner, \n3. click on the rectangle icon on the right-side toolbar and draw a small region around the NCEAS buildng,\n4. the geoJSON code representing this area will appear in the code box,\n5. one option is two copy-paste this geoJSON into an empty text file and save such file with the .json extension, we could then read it in using `geopandas`\n6. instead, we will create our region of index by just *copy-pasting the list of points* and storing it as a variable:\n\n::: {.cell execution_count=12}\n``` {.python .cell-code}\n# vertices of our aoi box\npoints = [[-119.70608227128903, 34.426300194372274],\n          [-119.70608227128903, 34.42041139020533],\n          [-119.6967885126002, 34.42041139020533],\n          [-119.6967885126002, 34.426300194372274],\n          [-119.70608227128903, 34.426300194372274]]\n```\n:::\n\n\nWe can then create a new `geopandas.GeoDataFrame`:\n\n::: {.cell execution_count=13}\n``` {.python .cell-code}\n# create geodataframe with aoi \naoi = gpd.GeoDataFrame(geometry=[Polygon(points)],\n                           crs='epsg:4326')\naoi\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>geometry</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>POLYGON ((-119.70608 34.42630, -119.70608 34.4...</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nLet's break this down a bit:\n\n- first, we use the `shapely`'s `Polygon()` function to create a polygon from our `points` list. \n- in `[Polygon(points)]` we put this polygon inside a list so we can form the geometry column of our new `gpd.GeoDataFrame`\n- we know all the geoJSON files have CRS equal to EPSG:4326/WGS 84, so we set the the CRS of our new `gpd.GeoDataFrame` to this.\n\n## Clip raster\n\nRemember: **if two geospatial sets will interact they need to be in the same CRS**.  \nIn our case, the aoi `gpd.GeoDataFrame` does not have the same CRS as the rasters:\n\n::: {.cell execution_count=14}\n``` {.python .cell-code}\n# check CRss\nprint('aoi CRS: ', aoi.crs)\nprint('nir CRS: ', nir.rio.crs)\nprint('rgb CRS: ', rgb.rio.crs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\naoi CRS:  epsg:4326\nnir CRS:  EPSG:26911\nrgb CRS:  EPSG:26911\n```\n:::\n:::\n\n\nSo let's reproject:\n\n::: {.cell execution_count=15}\n``` {.python .cell-code}\n# reproject aoi to rgb crs\naoi = aoi.to_crs(rgb.rio.crs)\nprint('matched crs?',  aoi.crs == rgb.rio.crs)\naoi.crs\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nmatched crs? True\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=15}\n```\n<Projected CRS: EPSG:26911>\nName: NAD83 / UTM zone 11N\nAxis Info [cartesian]:\n- [east]: Easting (metre)\n- [north]: Northing (metre)\nArea of Use:\n- undefined\nCoordinate Operation:\n- name: UTM zone 11N\n- method: Transverse Mercator\nDatum: North American Datum 1983\n- Ellipsoid: GRS 1980\n- Prime Meridian: Greenwich\n```\n:::\n:::\n\n\nAnd plot them together:\n\n::: {.cell execution_count=16}\n``` {.python .cell-code}\n# plot aoi outline and RGB raster together\nfig, ax = plt.subplots()\nfig.set_size_inches((size, size*aspect)) # reuse size and aspect\nrgb.plot.imshow(ax=ax)\naoi.plot(ax=ax, alpha=0.6)\n```\n\n::: {.cell-output .cell-output-display execution_count=16}\n```\n<Axes: title={'center': 'spatial_ref = 0'}, xlabel='x', ylabel='y'>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](lesson-17-rioxarray_files/figure-html/cell-17-output-2.png){width=354 height=414}\n:::\n:::\n\n\nTo clip the raster using the aoi polygon we use the `.rio.clip_box()` method:\n\n::: {.cell execution_count=17}\n``` {.python .cell-code}\n# clip rasters to aoi\nrgb_small = rgb.rio.clip_box(*aoi.total_bounds)\nnir_small = nir.rio.clip_box(*aoi.total_bounds)\n```\n:::\n\n\nNotice a few things:\n- we had to use the `.rio` accessor to access the `clip_box()` method \n- similarly to the `shapely.box()` function [we've used previously](https://carmengg.github.io/eds-220-book/lectures/lesson-13-standin.html#clipping-with-bounding-box), [`.rio.clip_box()` usual parameters](https://corteva.github.io/rioxarray/stable/rioxarray.html#rioxarray.raster_dataset.RasterDataset.clip_box) are minx, miny, maxx, maxy. We are using the `*` asterisk as an unpacking operator to get these from the list `aoi.total_bounds`.\n\nLet's check our clipped data:\n\n::: {.cell execution_count=18}\n``` {.python .cell-code}\n# check shape updates\nprint('original shape: ', rgb.shape)\nprint('reduced shape: ', rgb_small.shape)\n\n# plot with correct sizes\nsize = 4\naspect = rgb_small.rio.width/ rgb_small.rio.height\nrgb_small.plot.imshow(size=size, aspect=aspect)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\noriginal shape:  (3, 3208, 2419)\nreduced shape:  (3, 1128, 1454)\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=18}\n```\n<matplotlib.image.AxesImage at 0x145c332d0>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](lesson-17-rioxarray_files/figure-html/cell-19-output-3.png){width=471 height=391}\n:::\n:::\n\n\n::: {.cell execution_count=19}\n``` {.python .cell-code}\n# check shape updates\nprint('original shape: ', nir.shape)\nprint('reduced shape: ', nir_small.shape)\n\nnir_small.plot()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\noriginal shape:  (1, 3208, 2419)\nreduced shape:  (1, 1128, 1454)\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=19}\n```\n<matplotlib.collections.QuadMesh at 0x145d43890>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](lesson-17-rioxarray_files/figure-html/cell-20-output-3.png){width=583 height=464}\n:::\n:::\n\n\n## Compute NDVI\n\nWe often want to combine values of and perform calculations on rasters to create a new output raster. \nIn our case, we are interested in computing the Normalized Difference Vegetation Index (NDVI) over our area of interest. \nThe NDVI is an index commonly used to check if an area has live green vegetation or not.\n\nAccording to the [Earth Observing System](https://eos.com/blog/ndvi-faq-all-you-need-to-know-about-ndvi/)\n> The results of the NDVI calculation range from -1 to 1. Negative values correspond to areas with water surfaces, manmade structures, rocks, clouds, snow; bare soil usually falls within 0.1-0.2 range; and plants will always have positive values between 0.2 and 1. Healthy, dense vegetation canopy should be above 0.5, and sparse vegetation will most likely fall within 0.2 to 0.5. \n\nThe NDVI is calculated using the NIR and red bands. \nThe formula is\n\n$NDVI = \\frac{NIR - Red}{NIR + Red}.$\n\nFirst, we need to select the red band:\n\n::: {.cell execution_count=20}\n``` {.python .cell-code}\nred = rgb_small.sel(band=1)\nred\n```\n\n::: {.cell-output .cell-output-display execution_count=20}\n```{=html}\n<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n<defs>\n<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n</symbol>\n<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n</symbol>\n</defs>\n</svg>\n<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n *\n */\n\n:root {\n  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n  --xr-background-color: var(--jp-layout-color0, white);\n  --xr-background-color-row-even: var(--jp-layout-color1, white);\n  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n}\n\nhtml[theme=dark],\nbody[data-theme=dark],\nbody.vscode-dark {\n  --xr-font-color0: rgba(255, 255, 255, 1);\n  --xr-font-color2: rgba(255, 255, 255, 0.54);\n  --xr-font-color3: rgba(255, 255, 255, 0.38);\n  --xr-border-color: #1F1F1F;\n  --xr-disabled-color: #515151;\n  --xr-background-color: #111111;\n  --xr-background-color-row-even: #111111;\n  --xr-background-color-row-odd: #313131;\n}\n\n.xr-wrap {\n  display: block !important;\n  min-width: 300px;\n  max-width: 700px;\n}\n\n.xr-text-repr-fallback {\n  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n  display: none;\n}\n\n.xr-header {\n  padding-top: 6px;\n  padding-bottom: 6px;\n  margin-bottom: 4px;\n  border-bottom: solid 1px var(--xr-border-color);\n}\n\n.xr-header > div,\n.xr-header > ul {\n  display: inline;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.xr-obj-type,\n.xr-array-name {\n  margin-left: 2px;\n  margin-right: 10px;\n}\n\n.xr-obj-type {\n  color: var(--xr-font-color2);\n}\n\n.xr-sections {\n  padding-left: 0 !important;\n  display: grid;\n  grid-template-columns: 150px auto auto 1fr 20px 20px;\n}\n\n.xr-section-item {\n  display: contents;\n}\n\n.xr-section-item input {\n  display: none;\n}\n\n.xr-section-item input + label {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-item input:enabled + label {\n  cursor: pointer;\n  color: var(--xr-font-color2);\n}\n\n.xr-section-item input:enabled + label:hover {\n  color: var(--xr-font-color0);\n}\n\n.xr-section-summary {\n  grid-column: 1;\n  color: var(--xr-font-color2);\n  font-weight: 500;\n}\n\n.xr-section-summary > span {\n  display: inline-block;\n  padding-left: 0.5em;\n}\n\n.xr-section-summary-in:disabled + label {\n  color: var(--xr-font-color2);\n}\n\n.xr-section-summary-in + label:before {\n  display: inline-block;\n  content: '►';\n  font-size: 11px;\n  width: 15px;\n  text-align: center;\n}\n\n.xr-section-summary-in:disabled + label:before {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-summary-in:checked + label:before {\n  content: '▼';\n}\n\n.xr-section-summary-in:checked + label > span {\n  display: none;\n}\n\n.xr-section-summary,\n.xr-section-inline-details {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n.xr-section-inline-details {\n  grid-column: 2 / -1;\n}\n\n.xr-section-details {\n  display: none;\n  grid-column: 1 / -1;\n  margin-bottom: 5px;\n}\n\n.xr-section-summary-in:checked ~ .xr-section-details {\n  display: contents;\n}\n\n.xr-array-wrap {\n  grid-column: 1 / -1;\n  display: grid;\n  grid-template-columns: 20px auto;\n}\n\n.xr-array-wrap > label {\n  grid-column: 1;\n  vertical-align: top;\n}\n\n.xr-preview {\n  color: var(--xr-font-color3);\n}\n\n.xr-array-preview,\n.xr-array-data {\n  padding: 0 5px !important;\n  grid-column: 2;\n}\n\n.xr-array-data,\n.xr-array-in:checked ~ .xr-array-preview {\n  display: none;\n}\n\n.xr-array-in:checked ~ .xr-array-data,\n.xr-array-preview {\n  display: inline-block;\n}\n\n.xr-dim-list {\n  display: inline-block !important;\n  list-style: none;\n  padding: 0 !important;\n  margin: 0;\n}\n\n.xr-dim-list li {\n  display: inline-block;\n  padding: 0;\n  margin: 0;\n}\n\n.xr-dim-list:before {\n  content: '(';\n}\n\n.xr-dim-list:after {\n  content: ')';\n}\n\n.xr-dim-list li:not(:last-child):after {\n  content: ',';\n  padding-right: 5px;\n}\n\n.xr-has-index {\n  font-weight: bold;\n}\n\n.xr-var-list,\n.xr-var-item {\n  display: contents;\n}\n\n.xr-var-item > div,\n.xr-var-item label,\n.xr-var-item > .xr-var-name span {\n  background-color: var(--xr-background-color-row-even);\n  margin-bottom: 0;\n}\n\n.xr-var-item > .xr-var-name:hover span {\n  padding-right: 5px;\n}\n\n.xr-var-list > li:nth-child(odd) > div,\n.xr-var-list > li:nth-child(odd) > label,\n.xr-var-list > li:nth-child(odd) > .xr-var-name span {\n  background-color: var(--xr-background-color-row-odd);\n}\n\n.xr-var-name {\n  grid-column: 1;\n}\n\n.xr-var-dims {\n  grid-column: 2;\n}\n\n.xr-var-dtype {\n  grid-column: 3;\n  text-align: right;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-preview {\n  grid-column: 4;\n}\n\n.xr-index-preview {\n  grid-column: 2 / 5;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-name,\n.xr-var-dims,\n.xr-var-dtype,\n.xr-preview,\n.xr-attrs dt {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding-right: 10px;\n}\n\n.xr-var-name:hover,\n.xr-var-dims:hover,\n.xr-var-dtype:hover,\n.xr-attrs dt:hover {\n  overflow: visible;\n  width: auto;\n  z-index: 1;\n}\n\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  display: none;\n  background-color: var(--xr-background-color) !important;\n  padding-bottom: 5px !important;\n}\n\n.xr-var-attrs-in:checked ~ .xr-var-attrs,\n.xr-var-data-in:checked ~ .xr-var-data,\n.xr-index-data-in:checked ~ .xr-index-data {\n  display: block;\n}\n\n.xr-var-data > table {\n  float: right;\n}\n\n.xr-var-name span,\n.xr-var-data,\n.xr-index-name div,\n.xr-index-data,\n.xr-attrs {\n  padding-left: 25px !important;\n}\n\n.xr-attrs,\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  grid-column: 1 / -1;\n}\n\ndl.xr-attrs {\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-columns: 125px auto;\n}\n\n.xr-attrs dt,\n.xr-attrs dd {\n  padding: 0;\n  margin: 0;\n  float: left;\n  padding-right: 10px;\n  width: auto;\n}\n\n.xr-attrs dt {\n  font-weight: normal;\n  grid-column: 1;\n}\n\n.xr-attrs dt:hover span {\n  display: inline-block;\n  background: var(--xr-background-color);\n  padding-right: 10px;\n}\n\n.xr-attrs dd {\n  grid-column: 2;\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n\n.xr-icon-database,\n.xr-icon-file-text2,\n.xr-no-icon {\n  display: inline-block;\n  vertical-align: middle;\n  width: 1em;\n  height: 1.5em !important;\n  stroke-width: 0;\n  stroke: currentColor;\n  fill: currentColor;\n}\n</style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray (y: 1128, x: 1454)&gt;\n[1640112 values with dtype=uint8]\nCoordinates:\n    band         int64 1\n  * x            (x) float64 2.513e+05 2.513e+05 ... 2.522e+05 2.522e+05\n  * y            (y) float64 3.813e+06 3.813e+06 ... 3.812e+06 3.812e+06\n    spatial_ref  int64 0\nAttributes:\n    AREA_OR_POINT:  Area\n    scale_factor:   1.0\n    add_offset:     0.0</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'></div><ul class='xr-dim-list'><li><span class='xr-has-index'>y</span>: 1128</li><li><span class='xr-has-index'>x</span>: 1454</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-06501b6f-7b47-4e15-a91c-48948dfa019b' class='xr-array-in' type='checkbox' checked><label for='section-06501b6f-7b47-4e15-a91c-48948dfa019b' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>...</span></div><div class='xr-array-data'><pre>[1640112 values with dtype=uint8]</pre></div></div></li><li class='xr-section-item'><input id='section-8705df7b-e79b-406e-9615-4eefb0dbacb7' class='xr-section-summary-in' type='checkbox'  checked><label for='section-8705df7b-e79b-406e-9615-4eefb0dbacb7' class='xr-section-summary' >Coordinates: <span>(4)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>band</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>1</div><input id='attrs-e6cebfea-8eae-40a4-b0c3-8efc4307221b' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-e6cebfea-8eae-40a4-b0c3-8efc4307221b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-3af8f684-7558-4e82-9279-e3f0c14b2cb5' class='xr-var-data-in' type='checkbox'><label for='data-3af8f684-7558-4e82-9279-e3f0c14b2cb5' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array(1)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>2.513e+05 2.513e+05 ... 2.522e+05</div><input id='attrs-f8da8933-1696-4b1f-be84-349654acd45c' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-f8da8933-1696-4b1f-be84-349654acd45c' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-8602b7b0-78bb-4def-a150-3ef9a8152892' class='xr-var-data-in' type='checkbox'><label for='data-8602b7b0-78bb-4def-a150-3ef9a8152892' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>axis :</span></dt><dd>X</dd><dt><span>long_name :</span></dt><dd>x coordinate of projection</dd><dt><span>standard_name :</span></dt><dd>projection_x_coordinate</dd><dt><span>units :</span></dt><dd>metre</dd></dl></div><div class='xr-var-data'><pre>array([251303.1, 251303.7, 251304.3, ..., 252173.7, 252174.3, 252174.9])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>y</span></div><div class='xr-var-dims'>(y)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>3.813e+06 3.813e+06 ... 3.812e+06</div><input id='attrs-313e6374-09ec-44f7-8b67-cca86bc4f915' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-313e6374-09ec-44f7-8b67-cca86bc4f915' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-0b869af8-90ac-4633-9f59-b78081556295' class='xr-var-data-in' type='checkbox'><label for='data-0b869af8-90ac-4633-9f59-b78081556295' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>axis :</span></dt><dd>Y</dd><dt><span>long_name :</span></dt><dd>y coordinate of projection</dd><dt><span>standard_name :</span></dt><dd>projection_y_coordinate</dd><dt><span>units :</span></dt><dd>metre</dd></dl></div><div class='xr-var-data'><pre>array([3812746.5, 3812745.9, 3812745.3, ..., 3812071.5, 3812070.9, 3812070.3])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>spatial_ref</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>0</div><input id='attrs-0bfb6c95-d29f-4ed3-bbe2-c08f5ad97d7b' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-0bfb6c95-d29f-4ed3-bbe2-c08f5ad97d7b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-7a2326ca-607c-4abc-aab4-3c938db98680' class='xr-var-data-in' type='checkbox'><label for='data-7a2326ca-607c-4abc-aab4-3c938db98680' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>crs_wkt :</span></dt><dd>PROJCS[&quot;NAD83 / UTM zone 11N&quot;,GEOGCS[&quot;NAD83&quot;,DATUM[&quot;North_American_Datum_1983&quot;,SPHEROID[&quot;GRS 1980&quot;,6378137,298.257222101,AUTHORITY[&quot;EPSG&quot;,&quot;7019&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;6269&quot;]],PRIMEM[&quot;Greenwich&quot;,0,AUTHORITY[&quot;EPSG&quot;,&quot;8901&quot;]],UNIT[&quot;degree&quot;,0.0174532925199433,AUTHORITY[&quot;EPSG&quot;,&quot;9122&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;4269&quot;]],PROJECTION[&quot;Transverse_Mercator&quot;],PARAMETER[&quot;latitude_of_origin&quot;,0],PARAMETER[&quot;central_meridian&quot;,-117],PARAMETER[&quot;scale_factor&quot;,0.9996],PARAMETER[&quot;false_easting&quot;,500000],PARAMETER[&quot;false_northing&quot;,0],UNIT[&quot;metre&quot;,1,AUTHORITY[&quot;EPSG&quot;,&quot;9001&quot;]],AXIS[&quot;Easting&quot;,EAST],AXIS[&quot;Northing&quot;,NORTH],AUTHORITY[&quot;EPSG&quot;,&quot;26911&quot;]]</dd><dt><span>semi_major_axis :</span></dt><dd>6378137.0</dd><dt><span>semi_minor_axis :</span></dt><dd>6356752.314140356</dd><dt><span>inverse_flattening :</span></dt><dd>298.257222101</dd><dt><span>reference_ellipsoid_name :</span></dt><dd>GRS 1980</dd><dt><span>longitude_of_prime_meridian :</span></dt><dd>0.0</dd><dt><span>prime_meridian_name :</span></dt><dd>Greenwich</dd><dt><span>geographic_crs_name :</span></dt><dd>NAD83</dd><dt><span>horizontal_datum_name :</span></dt><dd>North American Datum 1983</dd><dt><span>projected_crs_name :</span></dt><dd>NAD83 / UTM zone 11N</dd><dt><span>grid_mapping_name :</span></dt><dd>transverse_mercator</dd><dt><span>latitude_of_projection_origin :</span></dt><dd>0.0</dd><dt><span>longitude_of_central_meridian :</span></dt><dd>-117.0</dd><dt><span>false_easting :</span></dt><dd>500000.0</dd><dt><span>false_northing :</span></dt><dd>0.0</dd><dt><span>scale_factor_at_central_meridian :</span></dt><dd>0.9996</dd><dt><span>spatial_ref :</span></dt><dd>PROJCS[&quot;NAD83 / UTM zone 11N&quot;,GEOGCS[&quot;NAD83&quot;,DATUM[&quot;North_American_Datum_1983&quot;,SPHEROID[&quot;GRS 1980&quot;,6378137,298.257222101,AUTHORITY[&quot;EPSG&quot;,&quot;7019&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;6269&quot;]],PRIMEM[&quot;Greenwich&quot;,0,AUTHORITY[&quot;EPSG&quot;,&quot;8901&quot;]],UNIT[&quot;degree&quot;,0.0174532925199433,AUTHORITY[&quot;EPSG&quot;,&quot;9122&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;4269&quot;]],PROJECTION[&quot;Transverse_Mercator&quot;],PARAMETER[&quot;latitude_of_origin&quot;,0],PARAMETER[&quot;central_meridian&quot;,-117],PARAMETER[&quot;scale_factor&quot;,0.9996],PARAMETER[&quot;false_easting&quot;,500000],PARAMETER[&quot;false_northing&quot;,0],UNIT[&quot;metre&quot;,1,AUTHORITY[&quot;EPSG&quot;,&quot;9001&quot;]],AXIS[&quot;Easting&quot;,EAST],AXIS[&quot;Northing&quot;,NORTH],AUTHORITY[&quot;EPSG&quot;,&quot;26911&quot;]]</dd><dt><span>GeoTransform :</span></dt><dd>251302.8 0.600000000000012 0.0 3812746.8 0.0 -0.5999999999997521</dd></dl></div><div class='xr-var-data'><pre>array(0)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-9d3a21e1-431f-49ca-95f4-5ec6853e93a8' class='xr-section-summary-in' type='checkbox'  ><label for='section-9d3a21e1-431f-49ca-95f4-5ec6853e93a8' class='xr-section-summary' >Indexes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>x</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-0b7365b3-33ac-4999-a996-949c71f14060' class='xr-index-data-in' type='checkbox'/><label for='index-0b7365b3-33ac-4999-a996-949c71f14060' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([251303.09999999998, 251303.69999999998,           251304.3,\n       251304.89999999997, 251305.49999999997, 251306.09999999998,\n       251306.69999999998,           251307.3, 251307.89999999997,\n       251308.49999999997,\n       ...\n                 252169.5, 252170.09999999998, 252170.69999999998,\n                 252171.3,           252171.9,           252172.5,\n       252173.09999999998, 252173.69999999998,           252174.3,\n                 252174.9],\n      dtype=&#x27;float64&#x27;, name=&#x27;x&#x27;, length=1454))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>y</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-3ac8e591-1342-4b23-9eca-b8dfba7c13c6' class='xr-index-data-in' type='checkbox'/><label for='index-3ac8e591-1342-4b23-9eca-b8dfba7c13c6' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([         3812746.5, 3812745.9000000004, 3812745.3000000003,\n                3812744.7,          3812744.1,          3812743.5,\n       3812742.9000000004, 3812742.3000000003,          3812741.7,\n                3812741.1,\n       ...\n                3812075.7,          3812075.1,          3812074.5,\n                3812073.9, 3812073.3000000003,          3812072.7,\n                3812072.1,          3812071.5,          3812070.9,\n       3812070.3000000003],\n      dtype=&#x27;float64&#x27;, name=&#x27;y&#x27;, length=1128))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-7c263207-6299-4975-a00c-d99a68c5d559' class='xr-section-summary-in' type='checkbox'  checked><label for='section-7c263207-6299-4975-a00c-d99a68c5d559' class='xr-section-summary' >Attributes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>AREA_OR_POINT :</span></dt><dd>Area</dd><dt><span>scale_factor :</span></dt><dd>1.0</dd><dt><span>add_offset :</span></dt><dd>0.0</dd></dl></div></li></ul></div></div>\n```\n:::\n:::\n\n\nTo be able to perform the calculation successfully, we will need to udpate the data type of our rasters:\n\n::: {.cell execution_count=21}\n``` {.python .cell-code}\nred16 = red.astype('int16')\nnir16 = nir_small.astype('int16')\nprint('RED: original dtype:', rgb_small.dtype, '.... converted dtype:', red16.dtype)\nprint('NIR: original dtype:', nir.dtype, '.... converted dtype:', nir16.dtype)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRED: original dtype: uint8 .... converted dtype: int16\nNIR: original dtype: uint8 .... converted dtype: int16\n```\n:::\n:::\n\n\nWe can perform raster calculations using the same arithmetic we use for `np.array`s (because, underneath it all, they are). \nSo our NDVI calculation is as follows:\n\n::: {.cell execution_count=22}\n``` {.python .cell-code}\n# calculate and plot NDVI\nndvi = (nir16 - red16)/(nir16+red16)\nndvi.plot()\n```\n\n::: {.cell-output .cell-output-display execution_count=22}\n```\n<matplotlib.collections.QuadMesh at 0x145e5f290>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](lesson-17-rioxarray_files/figure-html/cell-23-output-2.png){width=590 height=464}\n:::\n:::\n\n\nRemember that plants will always have positive NDVI values between 0.2 and 1. \nCan you spot the Courthouse?\n\n::: {.callout-warning}\n# Why change the data type?\nThe `uint8` (8-bit unsigned integer) is a very small data type that only holds integers from 0 up to 255. \nIn particular, calculations don't return what what we are used to when working with intgers ([they're done module 256](https://en.wikipedia.org/wiki/Modular_arithmetic)):\n\n::: {.cell execution_count=23}\n``` {.python .cell-code}\nnp.uint8(150) + np.uint8(150)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n/var/folders/gm/chd1kps96_g7xdxyfw150wm80000gp/T/ipykernel_84845/1890984988.py:1: RuntimeWarning: overflow encountered in scalar add\n  np.uint8(150) + np.uint8(150)\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=23}\n```\n44\n```\n:::\n:::\n\n\nIn the NDVI formula we have to add NIR + Red. \nIf both NIR and Red are very close to 255, when we add them, the calculation overflows the `uint8` data type and we don't get the expected results:\n\n::: {.cell execution_count=24}\n``` {.python .cell-code}\nx = (nir - red)/(nir + red)\nx.plot()\n```\n\n::: {.cell-output .cell-output-display execution_count=24}\n```\n<matplotlib.collections.QuadMesh at 0x145f49d10>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](lesson-17-rioxarray_files/figure-html/cell-25-output-2.png){width=568 height=449}\n:::\n:::\n\n\nThis is why we need to manually convert both rasters into `int16`, which will be big enough to hold all the numbers that appear in the calculations.\n\nNotice too, that when we performed the NDVI calculation we did not get any warning, although we were overflowing the computation at every cell of our array. \nThis is can be an example of *failing silently*, where we don't get any warnings about the errors in our computation. \nThat's why it's so important to double-check our results!\n:::\n\n",
    "supporting": [
      "lesson-17-rioxarray_files/figure-html"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}