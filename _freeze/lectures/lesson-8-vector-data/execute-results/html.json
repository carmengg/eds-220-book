{
  "hash": "967e37df17edc0a2c5dcf23d82fd1940",
  "result": {
    "markdown": "# Vector data\n\nVector data is one of the two primary types of geospatial data (the other one being raster data). In this section we will review what vector data is and go over some common data formats for it.\n\n\n## Points, lines, and polygons\n\n**Vector data** represents specific features on the Earth's surface. There are three types of vector data:\n\n- **Points:** each point has a single x,y location. Examples of data that can be represented as point vector data are sampling locations or animal sightings.\n\n- **Lines:** a line is composed of at least two points that are connected. Roads and streams are commonly depicted as line vector data. \n\n- **Polygons:** polygons are sets of three or more vertices that are connected and form a closed region. Political boundaries (outlines of countries, states, cities, etc) are examples of polygon vector data.\n\nEach item in the vector data is usually referred to as a **feature**. \nSo each point would be a feature, each polygon is a feature, etc. \n\n![Image Source: National Ecological Observatory Network (NEON)](/images/lesson-7-vector-data/point_line_poly.png)\n\nIn addition to the geospatial information stored, vector data can include **attributes** that describe each feature. \nFor example, a vector dataset where each feature is a polygon representing the boundary of a state could have as attributes the population and are of the state.\n\n![Image Source: National Ecological Observatory Network (NEON)](/images/lesson-7-vector-data/spatial-attribute-tables.png)\n\n## Shapefiles\n\nOne of the most popular formats to store vector data is the **shapefile** data format. The `shapefile` format is developed and maintained by the Environmental Systems Research Institute (Esri).\n\nSo far we've been working with data that comes stored in a single file, like a `csv` or `txt` file for tabular data. A shapefile is actually a collection of files that interact together to create a single data file. All the files that make up a shapefile need to  have the same name (different extensions) and be in the same directory. For our shapefiles to work we need *at least* these three files:\n\n- `.shp`: shape format, this file has the geometries for all features.\n- `.shx`: shape index format, this file indexes the features\n- `.dbf`: attribute format, this file stores the attributes for features as a table\n\nSometimes shapefiles will have additional files, including:\n\n- `.prj`: a file containing information about the projection and coordinate reference system \n- `.sbn` and `.sbx`: files that contain a spatial index of the features\n- `.shp.xml`: geospatial metadata in XML format. \n\nCheck the [Wikipedia page about shapefiles](https://en.wikipedia.org/wiki/Shapefile) to see a more extensive list of files associated to shapefiles.\n\n::: {.callout-caution}\n## File management\nRemember: when working with a shapefile all the associated files must have the same name (different extensions) and be located in the same directory. \n:::\n\n::: {.callout-caution}\n## Different vector types = separate shapefiles\nEach shapefile can only hold one type of vector data. So only points, only lines, or only polygons can be inside a single shapefile. \n:::\n\n\n## GeoJSON\n\n[GeoJSON](https://en.wikipedia.org/wiki/GeoJSON), which stands for Geographic JavaScript Object Notation, is an open format for encoding vector data (points, lines, polygons, and multipolygons) and their attributes. \nIt is a popular format for web mapping applications. \nThe GeoJSON format uses a single file, with extension `.json` or `.geojson`. \n\nWhile shapefiles can be in any coordinate reference system, the [GeoJSON specification](https://datatracker.ietf.org/doc/html/rfc7946) requires GeoJSON files to use the World Geodetic System 1984 (WGS84) and all points being expressed as longitude and latitude units of decimal degrees.\n\nData in a GeoJSON is stored as attribute-value pairs (think dictionaries!) and lists. The following are examples of how points, lines, and polygons are represented as GeoJSON features:\n\n![Source: Wikipedia](/images/lesson-7-vector-data/geojson-vector-types.png)\n\nThe followng is an example of a full GeoJSON file. Notice multiple types of geometries can be mixed within the same file:\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\n# Source: Wikipedia\n{\n  \"type\": \"FeatureCollection\",\n  \"features\": [\n    {\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [102.0, 0.5]\n      },\n      \"properties\": {\n        \"prop0\": \"value0\"\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"LineString\",\n        \"coordinates\": [\n          [102.0, 0.0],\n          [103.0, 1.0],\n          [104.0, 0.0],\n          [105.0, 1.0]\n        ]\n      },\n      \"properties\": {\n        \"prop0\": \"value0\",\n        \"prop1\": 0.0\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\n          [\n            [100.0, 0.0],\n            [101.0, 0.0],\n            [101.0, 1.0],\n            [100.0, 1.0],\n            [100.0, 0.0]\n          ]\n        ]\n      },\n      \"properties\": {\n        \"prop0\": \"value0\",\n        \"prop1\": { \"this\": \"that\" }\n      }\n    }\n  ]\n}\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\n{'type': 'FeatureCollection',\n 'features': [{'type': 'Feature',\n   'geometry': {'type': 'Point', 'coordinates': [102.0, 0.5]},\n   'properties': {'prop0': 'value0'}},\n  {'type': 'Feature',\n   'geometry': {'type': 'LineString',\n    'coordinates': [[102.0, 0.0], [103.0, 1.0], [104.0, 0.0], [105.0, 1.0]]},\n   'properties': {'prop0': 'value0', 'prop1': 0.0}},\n  {'type': 'Feature',\n   'geometry': {'type': 'Polygon',\n    'coordinates': [[[100.0, 0.0],\n      [101.0, 0.0],\n      [101.0, 1.0],\n      [100.0, 1.0],\n      [100.0, 0.0]]]},\n   'properties': {'prop0': 'value0', 'prop1': {'this': 'that'}}}]}\n```\n:::\n:::\n\n\nThe website [https://geojson.io/](https://geojson.io/) is a nice tool to easily create GeoJSON files.\n\n\n<!--\n## Acknowledgements\n-->\n\n\n## References\n\nData Carpentires - [Introduction to Geospatial Concepts](https://datacarpentry.org/organization-geospatial/aio.html) \n\n",
    "supporting": [
      "lesson-8-vector-data_files"
    ],
    "filters": [],
    "includes": {}
  }
}