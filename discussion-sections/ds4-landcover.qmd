# *Lab: land cover statistics

The goal of this lab is to extract statistics about land cover from a raster.

:::{.callout-tip}
## Notebook Setup
1. In the Tsosie server, start a new JupyterLab session or access an active one.

2. Create a new notebook in your `eds-220-sections` directory. Update the name to 'landcover-stats.ipynb'.

3. Use the terminal to stage, commit, and push this file to the remote repository. 
:::

:::{.callout-note}
## General directions
- Add comments in each one of your code cells 
- Include markdown cells in between your code cells to add titles/information to each exercise
:::

:::{.callout-note}
## About the data

For this task we are going to use two datasets. 

**First dataset**

A small section of the GAP/LANDFIRE National Terrestrial Ecosystems data for 2011, from the [US Geological Survey (USGS)](https://earthquake.usgs.gov/earthquakes/search/). 
This is a raster file with a 30 m x 30 m cell resolution. Each cell in the raster has a number representing the type of land cover at the place.

The data was pre-processed in the Microsof Planetary Computer to show a small region around Mount Whitney in California.

Further information about the dataset can be accessed via the the dataset's Digital Object Identifier (DOI) link:

> U.S. Geological Survey (USGS) Gap Analysis Project (GAP), 2016, GAP/LANDFIRE National Terrestrial Ecosystems 2011: U.S. Geological Survey data release, [https://doi.org/10.5066/F7ZS2TM0](https://doi.org/10.5066/F7ZS2TM0).

**Second dataset**

The second dataset is a csv file with the name of the land cover associated with each code.  

**Data access**
Download the data from Canvas - week 7. 
The zip file you download includes a .tif file and a .csv file. 
:::

## Land cover statistics

## Import data
1. Import the raster file and store it in a variable `lulc`. LULC stands for land use/land cover.  

2. Import the tabular data and store it in a variable `class_names`.

## Raster exploration 

Discuss with your team (at least) three methods to explore your raster and implement them. 

## Raster reduction

How many dimensions does `lulc` cover have? If needed, write a one-liner to get rid of unnecessary dimensions. 

## Number of pixels per class

### `np.unique()`
Use the `numpy` function `np.uique()` to get the number of pixels per class in `lulc`. 
HINT: check [the `np.unique()` documentation](https://numpy.org/doc/stable/reference/generated/numpy.unique.html) to see what the `return_counts` parameter does and read the last example. 

### Organize data
Create a data frame with two columns: column one must be the code numbers for the pixels in `lulc` and column two must be the number of pixels corresponding to each code. 
HINT: [check our class notes](https://carmengg.github.io/eds-220-book/lectures/lesson-2-series-dataframes.html#data-frames)

## Add the 



